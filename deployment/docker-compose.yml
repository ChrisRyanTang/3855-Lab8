services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    volumes:
      - /home/Kris/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka-3855.westus2.cloudapp.azure.com
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka-3855.westus2.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/Kris/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'reviews_db'
      MYSQL_USER: 'Kris'
      MYSQL_PASSWORD: 'Kiwi!0313'
      MYSQL_ROOT_PASSWORD: 'Kiwi!0313'
    ports:
      - '3306:3306'
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    image: necalor/receiver:receiverapp
    ports:
      - "8080:8080"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/Kris/config/receiver:/config
      - /home/Kris/logs/receiver:/logs
    depends_on:
      - "kafka"

  storage:
    image: necalor/storage:storageapp
    ports:
      - "8090:8090"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/Kris/config/storage:/config
      - /home/Kris/logs/storage:/logs
    depends_on:
      - "kafka"
      - "db"

  processing:
    image: necalor/processing:processingapp
    ports:
      - "8100:8100"
    network_mode: host
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/Kris/config/processing:/config
      - /home/Kris/logs/processing:/logs
      - processing-db:/data
    depends_on:
      - "storage"

  analyzer:
    image: analyzer
    ports:
      - "8110:8110"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/Kris/config/analyzer:/config
      - /home/Kris/logs/analyzer:/logs
    depends_on:
      - "kafka"

  dashboard:
    image: dashboard
    ports:
      - "3000:3000"
    depends_on:
      - "processing"
      - "analyzer"
  
  anomaly:
    image: anomaly
    ports:
      - "8120:8120"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/Kris/config/anomaly:/config
      - /home/Kris/logs/anomaly:/logs
      - anomaly-db:/data
    depends_on:
      - "kafka"

volumes:
  my-db:
  processing-db:
  anomaly-db: