{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Term 4\\\\3855 Architecture\\\\Lab_8\\\\3855-Lab8\\\\dashboard-ui\\\\src\\\\components\\\\EndpointAnalyzer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nexport default function EndpointAnalyzer(props) {\n  _s();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [log, setLog] = useState(null);\n  const [error, setError] = useState(null);\n  const rand_val = Math.floor(Math.random() * 100); // Get a random event from the event store\n\n  const getAnalyzer = () => {\n    fetch(`http://kafka-3855.westus2.cloudapp.azure.com:8110/${props.endpoint}?index=${rand_val}`).then(res => res.json()).then(result => {\n      console.log(\"Received Analyzer Results for \" + props.endpoint);\n      setLog(result);\n      setIsLoaded(true);\n    }, error => {\n      setError(error);\n      setIsLoaded(true);\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => getAnalyzer(), 4000); // Update every 4 seconds\n\n    return () => clearInterval(interval);\n  }, [getAnalyzer]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Error found when fetching from API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  } else if (isLoaded === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  } else if (isLoaded === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [props.endpoint, \"-\", rand_val]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), JSON.stringify(log)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(EndpointAnalyzer, \"z2lNyvo5MM5Nme+Oqfw9gedXEZk=\");\n\n_c = EndpointAnalyzer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndpointAnalyzer\");","map":{"version":3,"sources":["C:/Users/chris/Desktop/Term 4/3855 Architecture/Lab_8/3855-Lab8/dashboard-ui/src/components/EndpointAnalyzer.js"],"names":["React","useEffect","useState","EndpointAnalyzer","props","isLoaded","setIsLoaded","log","setLog","error","setError","rand_val","Math","floor","random","getAnalyzer","fetch","endpoint","then","res","json","result","console","interval","setInterval","clearInterval","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACH,QAAMS,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAjB,CAJ+C,CAIG;;AAE/C,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAE,qDAAoDZ,KAAK,CAACa,QAAS,UAASN,QAAS,EAAvF,CAAL,CACKO,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,MAAD,IAAU;AACxBC,MAAAA,OAAO,CAACf,GAAR,CAAY,mCAAmCH,KAAK,CAACa,QAArD;AACYT,MAAAA,MAAM,CAACa,MAAD,CAAN;AACAf,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KANL,EAMOG,KAAD,IAAU;AACRC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KATL;AAUH,GAXD;;AAYHL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMsB,QAAQ,GAAGC,WAAW,CAAC,MAAMT,WAAW,EAAlB,EAAsB,IAAtB,CAA5B,CADe,CAC0C;;AACzD,WAAM,MAAMU,aAAa,CAACF,QAAD,CAAzB;AACG,GAHK,EAGH,CAACR,WAAD,CAHG,CAAT;;AAKG,MAAIN,KAAJ,EAAU;AACN,wBAAQ;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAEO,IAAIJ,QAAQ,KAAK,KAAjB,EAAuB;AAC1B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA,IAAIA,QAAQ,KAAK,IAAjB,EAAsB;AAEzB,wBACI;AAAA,8BACI;AAAA,mBAAKD,KAAK,CAACa,QAAX,OAAsBN,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKe,IAAI,CAACC,SAAL,CAAepB,GAAf,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AACJ;;GApCuBJ,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../App.css';\r\n\r\nexport default function EndpointAnalyzer(props) {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [log, setLog] = useState(null);\r\n    const [error, setError] = useState(null)\r\n\tconst rand_val = Math.floor(Math.random() * 100); // Get a random event from the event store\r\n\r\n    const getAnalyzer = () => {\r\n        fetch(`http://kafka-3855.westus2.cloudapp.azure.com:8110/${props.endpoint}?index=${rand_val}`)\r\n            .then(res => res.json())\r\n            .then((result)=>{\r\n\t\t\t\tconsole.log(\"Received Analyzer Results for \" + props.endpoint)\r\n                setLog(result);\r\n                setIsLoaded(true);\r\n            },(error) =>{\r\n                setError(error)\r\n                setIsLoaded(true);\r\n            })\r\n    }\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => getAnalyzer(), 4000); // Update every 4 seconds\r\n\t\treturn() => clearInterval(interval);\r\n    }, [getAnalyzer]);\r\n\r\n    if (error){\r\n        return (<div className={\"error\"}>Error found when fetching from API</div>)\r\n    } else if (isLoaded === false){\r\n        return(<div>Loading...</div>)\r\n    } else if (isLoaded === true){\r\n        \r\n        return (\r\n            <div>\r\n                <h3>{props.endpoint}-{rand_val}</h3>\r\n                {JSON.stringify(log)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}